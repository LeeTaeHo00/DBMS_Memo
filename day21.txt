0. 복습 -> DDL -> 무결성 -> 모델링

0. 복습
1) SQL 문특징
	인터프리터 언어
	대소문자를 구분하지 않는다.

2) 자료형
	문자 CHAR
	숫자 NUMBER
	날짜 DATE
	대용량 BLOB

3) 종류
	데이터  정의어
	데이터  조작어 VDML
		INSERT 삽입, 
	
		테이블 전체 컬럼의 값을 넣을 떄
		INSERT INTO 테이블명
		VALUES (값, 값,...);

		테이블 일부에 값을 넣을 떄
		INSERT INTO 테이블명(컬럼명1, 컬럼명2,...) VALUES (값1, 값2, ...)

		DELETE 삭제, 
		DELETE FROM 테이블명
		[WHERE 조건식]

		UPDATE 수정,
		UPDATE 테이블명 SET 
		컬럼명1 = 값1, 컬럼명2 = 값2
		[WHERE]
 
		SELECT 조회
		SELECT [DISTICT] 컬럼명 [AS 별칭]
		FROM
		WHERE
		ORDER BY
		
	데이터  제어어
	트랜젝션 제어어

=======================================================================================================
1. DDL 데이터 정의어
	테이블 조작, 제어 관련 쿼리문

1) CREATE : 테이블 생성
	CREATE TABLE 테이블명( 컬럼명 자료형(용량) [제약조건])

2) DROP : 테이블삭제
	DROP TABLE 테이블명;

3) ALTER : 테이블 수정
	ALTER TABLE 테이블명
	-- 테이블명 수정 	RENAME TO 새로운 테이블명
	-- 컬럼명 수정	RENAME COLUMN 기존컬럼명 TO 변경할 컬럼명;
	-- 컬럼 타입 수정	MODIFY(기존컬럼명 자료형(용량));
	-- 컬럼 추가	ADD (새로운컬럼명 자료형(용량))'
	-- 컬럼 삭제	DROP COLUMB 기존 컬럼명;
	-- 제약 조건 추가	ADD CONSTRAINT 제약조건 이름 PRIMARY KEY(현재 테이블의 컬러명);
			ADD CONSTRAINT 제약조건 이름 FOREIGN KEY(현재 테이블의 컬럼명) REFERENCE 상위테이블명(컬럼명);
	-- 제약 조건 삭제	REMOVE CONSTRAINT 제약조건이름;

4) TRUNCATE : 테이블 내용 전체 삭제 (데이터를 삭제)
	TURNCATEL TABLE 테이블명;

+) DLETE TRUNCATE 의 차이
	DELETE  : DMBL 테이블의 모든 데이터 삭제, 테이블의 전체용량으 감소하지 않음
	TRUNCATE  : DDL, 테이블의 모든 데이터 삭제, 테이블 용량 쵝, rollback where 사용 불가능




1) 제약조건 (CONSTRAINTS)
	테이블에 저장되는 데이터의 무결성(정확성/일관성)을 보장하는 규칙

PK(PRIMARY KEY) : 
고유한 값이면 각행의 구분점으로 사용된다.
중복이 없고 NULL값을 허용하지 않늗나.

FK(FORIGN KEY) 
	다른 테이블의 pk를 사용하며 중복가능
	다른 테이블끼리 관계를 맺을 때 사용
	NULL값 허용하지만 권장안함

3) UK(UNIQUE KEY)
	중복X
	NULL 허용

=======================================================================================================
팀과제
- 도서 관리 프로그램
- 사용자는 로그인하고 책을 대출할 수 있음(최대 20권)
- 책은 대출 가능 상태일 때만 대출 가능
- 객체지향 설계 원칙(상속, 다형성, 추사오하, 인터페이스, 예외처리, 컬렉션 프레임워크)


1.	사용자 설계자 user클래스, loginManager 클래스, 유저 = 추상클래스 (사용자 기본정보, 모든 필드 private) loginManager 클래스 설계(Map에 사용자 저장/ 조회)

2.	회원 기능 담당 Member	User 클래스 상속, 
				List 필드, 
				메소드 로그인 메소드 오버라이드, 도서대출 메소드(최대횟수 20번, 이미 되어있는 책인지 확인), 반납 메소드(대출했던 책만), 대출중인 책 목록 확인 메소드

3. 	도서 설계자		Book, Borrow 인터페이스	Borrow 인터페이스 -> (대여 -> 예외 던지기, 반납)
						BOOK 클래스 설계
						도서와 관련된 기본정보
						이름 번호 
						도서 대출 메소드 오버라이딩
						equals, hashCode 오버라이딩

4. 	서비스 로직 설계자	LibraryService,  	리스트 객체
						도서목록 출력 메소드
						책 검색 메소드
						책 대여 메소드(매개변수 2개, Member, 도서제목)
						책 반납 메소드(매개변수 2개 = Member, 도서제목)

5. 	예외클래스		MaxBorrowException
			BookNotAvailableException
			BookAlreadyEception

6. 	UI 및 실행	ConsoleUI		번호로 입력(Scanner 입력)		LibraryApp -> main 메소드
						메뉴 메소드
						대출할 책 목록
						반납할 책 목록 메소드
						1. 
						2. 
						3. 
						4.
						0. 시스템 종료